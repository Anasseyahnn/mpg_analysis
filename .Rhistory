stat_num[, c("mean","sd","median","min","max","range","skew", "kurtosis")] %>% knitr::kable(digits = 2, caption = "Résumé Statistique des variables numériques")
mpg_aumente%>%
mutate_if(is.character, as.factor) %>%
select_if(is.factor) %>%
select(-trans) %>%
skimr::skim() %>%
as_tibble() %>%
mutate(variable = skim_variable,
modalite_unique = factor.n_unique,
top_modalite = factor.top_counts) %>%
select(variable,modalite_unique,top_modalite ) %>%
knitr::kable(align = "c",
caption = "Résumé Statistique des variables numériques")
mpg_aumente %>%
ggplot(aes(displ))+
geom_histogram(bins = 25) +
theme_minimal()+
labs(
subtitle = "Distribustion du nombre de cylindré (n = 234) ",
x = "Nombre de cylindres",
y = "",
caption = "Source : mpg data - ggplot2_package"
)
mpg_aumente %>%
ggplot(aes(avg_mpg))+
geom_histogram(bins = 25) +
theme_minimal()+
labs(
title = "Distribustion de la consommation moyenne (n = 234)",
x = "consomation de carburant(mille/gallon)",
y = "",
caption = "Source : mpg data - ggplot2_package"
)
mpg_2008 = mpg_aumente %>%
filter(year == 2008,
!(class %in% c("2seater","minivan"))) %>%
mutate(
class = case_when(
class %in% c("compact", "subcompact") ~ '(Sub-)Compact',
class %in% c("pickup", "suv") ~ 'Pickup/SUV',
TRUE ~ str_to_title(class)
),
manufacturer = str_to_title(manufacturer),
manufacturer = fct_infreq(manufacturer) |>  fct_rev()
)
colors <- thematic::okabe_ito(4)
graphe_decomposé = mpg_2008 %>%
ggplot(aes(y = manufacturer, fill = class))+
geom_bar()+
theme_minimal(base_size = 10,
base_family = 'Source Sans Pro'
)+
scale_fill_manual(values = colors[1:3])+
facet_wrap(vars(class))+
labs(x = element_blank(), y = element_blank())+
theme(
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none'
)
total_plot = mpg_2008 %>%
ggplot(aes(y = manufacturer))+
geom_bar(fill = colors[4])+
geom_vline(xintercept = 0)+
theme_minimal(base_size = 10, base_family = 'Source Sans Pro')+
scale_fill_manual(values = colors[1:3])+
scale_y_discrete(labels = element_blank())+
facet_wrap(vars('Total'))+
labs(x = element_blank(), y = element_blank())+
theme(
panel.grid.minor = element_blank(),
panel.grid.major.y = element_blank(),
legend.position = 'none'
)
library(patchwork)
graphe_decomposé + total_plot+
plot_annotation(
title = 'Vehicules par entreprise et par classe',
theme = theme(
element_text(size=12, family = 'Merriweather')
)
)
colors <- c("dodgerblue4","firebrick2")
mpg_aumente %>%
mutate(
# transformation des modaités de trans en (auto ou manuel)
trans_two_modalities = case_when(
str_detect(trans, "auto") ~ "auto",
TRUE ~ "manuel"
),
trans_two_modalities = str_to_title(trans_two_modalities)
) %>%
group_by(trans_two_modalities) %>%
summarise(nb_modalities = n(),
prop= round((nb_modalities*100)/234),
lab.ypos = cumsum(prop) - (0.3* prop),
prop_percent = str_c(prop, "%", sep = "")
) %>%
ungroup() %>%
ggplot(aes(x = 2,y = prop, fill = trans_two_modalities))+
geom_bar(width = 1,stat = "identity", color = "white")+
coord_polar("y", start = 0)+
geom_text(aes(y = lab.ypos, label = prop_percent))+
scale_fill_manual(values =colors)+
theme_void()+
labs(subtitle ="Distribustion des types de transmission des véhicules (n = 234)",
caption = "Source : mpg data - ggplot2_package",
fill = "Transmission")+
xlim(0.5,2.5)
cov_matrix <-  mpg_aumente %>%
select_if(is.numeric) %>%
cor()
cov_tibble <- cov_matrix %>%
as_tibble(rownames = 'var_a') %>%
pivot_longer(
-var_a,
names_to = "var_b",
values_to = "correlation"
)
var_names <- unique(cov_tibble$var_a)
cov_tibble_factored <-  cov_tibble %>%
mutate(
var_a = factor(var_a, levels = var_names),
var_b = factor(var_b, levels = rev(var_names))
)
cov_tibble_factored %>%
ggplot(aes(var_a, var_b))+
geom_tile(aes(fill = correlation), color = "black")+
geom_text(aes(label = round(correlation,2)),
color = ifelse(
abs(cov_tibble_factored$correlation) > 0.6,
'white',
'black'
),
size = 3.5,
family = 'Source Sans Pro',
fontface = 'bold'
)+
theme_minimal(
base_size = 12,
base_family = 'Source Sans Pro'
)+
labs(
x = element_blank(),
y = element_blank(),
fill = 'Correlation',
subtitle = "Intensité des liaisons entre les variable numérique mpg",
caption = "Source : mpg data - ggplot2_package",
)+
scale_fill_gradient2(
high = 'dodgerblue4',
mid = 'white',
low = 'firebrick2',
limits = c(-1,1),
midpoint = 0
)+
coord_cartesian(expand = FALSE)+
theme(legend.position = 'top')+
guides(
fill = guide_colorbar(
barwidth = unit(10, 'cm')
),
x = guide_axis(n.dodge = 2)
)
nuage_point <-
mpg_aumente %>%
filter(cyl %in% c(2,4,6,8)) %>%
ggplot(aes(displ,avg_mpg, fill = cyl))+
geom_point(shape =21, size = 3)+
geom_mark_ellipse(
data = mpg_aumente |>
filter(displ <= 2.5 & between(avg_mpg, 30,40)),
aes(
x0 = 3,
y0 = 35,
label = "Consommation importante de carburant",
),
fill = "firebrick2",
alpha = 0.2
) +
labs(
x = "Taille de la cylindrés du moteur (en littre)",
y = "Consommation moyenne de carburant (en mpg)",
fill = "Nombre de cylindres",
subtitle = "Distribustion de la consommation de carburant selon la cylindré",
caption = "Source : mpg data - ggplot2_package",
)+
theme_minimal(base_size =10)+
theme(
legend.position = 'top',
legend.title = element_text(face = 'bold'),
panel.grid.minor = element_blank()
) +
scale_fill_distiller(
palette = 'Blues',
direction = 1
)
nuage_point +
guides(
fill = guide_coloursteps(
title.position = 'top',
barwidth = unit(7, 'cm')
)
)
mpg_aumente %>%
ggplot(avg_mpg, co2_emission, fill = manufacturer)+
geom_line()
mpg_aumente
mpg_aumente %>%
ggplot(avg_mpg, co2_emission, fill = manufacturer)+
geom_line()
mpg_aumente %>%
ggplot(x = avg_mpg, y = co2_emission, fill = manufacturer)+
geom_line()
mpg_aumente %>%
ggplot(aes(x = avg_mpg, y = co2_emission, fill = manufacturer))+
geom_line()
mpg_aumente %>%
ggplot(aes(x = avg_mpg, y = co2_emission, colour =  = manufacturer))+
mpg_aumente %>%
ggplot(aes(x = avg_mpg, y = co2_emission, color  = manufacturer))+
geom_line()
mpg_aumente %>%
ggplot(aes(x = avg_mpg, y = co2_emission, color  = model))+
geom_line()
mpg_aumente
mpg_aumente %>%
ggplot(aes(x = avg_mpg, y = co2_emission, color  = class))+
geom_line()
mpg_aumente %>%
ggplot(aes(x = avg_mpg, y = co2_emission, color  = cyl))+
geom_line()
mpg_aumente %>%
mutate(
trans = str_to_title(trans)
) %>%
group_by(trans) %>%
summarise(avg_mpg= mean(avg_mpg)) %>%
ungroup()  %>%
ggplot(aes(x =avg_mpg, y = trans))+
geom_point(
color = 'dodgerblue4',
size = 4
)+
geom_text(
aes(
label = trans
),
hjust = 1,
nudge_x = -0.09,
size = 3,
family = 'Merriweather'
)+
theme_minimal(
base_size = 10,
base_family = 'Merriweather'
)+
labs(subtitle = "Evolution de la consommation moyenne par type de transmission",
x = element_blank(),
y = element_blank(),
caption = "Source : mpg data - ggplot2_package"
)+
scale_x_continuous(
expand = expansion(mult = c(0.15,0.05))
)+
theme(
panel.grid.major.y = element_blank(),
plot.title.position = 'plot',
axis.text.y = element_blank()
)
colors <-  c("firebrick2",'#009E73', 'dodgerblue4')
names(colors) <-  unique(mpg_aumente$drv)
mpg_aumente %>%
ggplot(aes(avg_mpg, fill = drv, y = drv))+
geom_boxplot(width = 0.08) +
geom_dots(
side = 'bottom',
height = 0.55,
position = position_nudge(y = -0.075)
)+
stat_slab(
position = position_nudge(y = 0.075),
height = 0.75
)+
scale_fill_manual(values = colors)+
labs(
subtitle = "Evolution de la consommation moyenne par type de traction",
x = element_blank(),
y = element_blank(),
caption = "Source : mpg data - ggplot2_package"
)+
theme_minimal(
base_size = 10,
base_family = 'Merriweather'
)+
theme(
panel.grid.minor = element_blank(),
legend.position = 'none'
)
nuage_point <-
mpg_aumente %>%
filter(cyl %in% c(2,4,6,8)) %>%
ggplot(aes(displ,avg_mpg, fill = cyl))+
geom_point(shape =21, size = 3)+
geom_mark_ellipse(
data = mpg_aumente |>
filter(displ <= 2.5 & between(avg_mpg, 30,40)),
aes(
x0 = 3,
y0 = 35,
label = "Consommation importante de carburant",
),
fill = "firebrick2",
alpha = 0.1
) +
labs(
x = "Taille de la cylindrés du moteur (en littre)",
y = "Consommation moyenne de carburant (en mpg)",
fill = "Nombre de cylindres",
subtitle = "Distribustion de la consommation de carburant selon la cylindré",
caption = "Source : mpg data - ggplot2_package",
)+
theme_minimal(base_size =10)+
theme(
legend.position = 'top',
legend.title = element_text(face = 'bold'),
panel.grid.minor = element_blank()
) +
scale_fill_distiller(
palette = 'Blues',
direction = 1
)
nuage_point +
guides(
fill = guide_coloursteps(
title.position = 'top',
barwidth = unit(7, 'cm')
)
)
mpg_aumente %>%
ggplot(aes(x = avg_mpg, y = co2_emission, color  = ))+
geom_line()+
+
labs(
x = "Taille de la cylindrés du moteur (en littre)",
y = "Consommation moyenne de carburant (en mpg)",
fill = "Nombre de cylindres",
subtitle = "Distribustion de la consommation de carburant selon la cylindré",
caption = "Source : mpg data - ggplot2_package",
)+
theme_minimal(base_size =10)+
theme(
legend.position = 'top',
legend.title = element_text(face = 'bold'),
panel.grid.minor = element_blank()
) +
scale_fill_distiller(
palette = 'Blues',
direction = 1
)
mpg_aumente %>%
ggplot(aes(x = avg_mpg, y = co2_emission, color  = ))+
geom_line()+
labs(
x = "Taille de la cylindrés du moteur (en littre)",
y = "Consommation moyenne de carburant (en mpg)",
fill = "Nombre de cylindres",
subtitle = "Distribustion de la consommation de carburant selon la cylindré",
caption = "Source : mpg data - ggplot2_package",
)+
theme_minimal(base_size =10)+
theme(
legend.position = 'top',
legend.title = element_text(face = 'bold'),
panel.grid.minor = element_blank()
) +
scale_fill_distiller(
palette = 'Blues',
direction = 1
)
mpg_aumente %>%
ggplot(aes(x = avg_mpg, y = co2_emission, color = cyl ))+
geom_line()+
labs(
x = "Taille de la cylindrés du moteur (en littre)",
y = "Consommation moyenne de carburant (en mpg)",
fill = "Nombre de cylindres",
subtitle = "Distribustion de la consommation de carburant selon la cylindré",
caption = "Source : mpg data - ggplot2_package",
)+
theme_minimal(base_size =10)+
theme(
legend.position = 'top',
legend.title = element_text(face = 'bold'),
panel.grid.minor = element_blank()
) +
scale_fill_distiller(
palette = 'Blues',
direction = 1
)
mpg_aumente %>%
ggplot(aes(x = co2_emission , y = avg_mpg, color = cyl ))+
geom_line()+
labs(
x = "Consommation moyenne de carburant (en mpg)",
y = "Emission de CO2 ",
fill = "Nombre de cylindres",
subtitle = "Distribustion de la consommation de carburant selon la cylindré",
caption = "Source : mpg data - ggplot2_package",
)+
theme_minimal(base_size =10)+
theme(
legend.position = 'top',
legend.title = element_text(face = 'bold'),
panel.grid.minor = element_blank()
) +
scale_fill_distiller(
palette = 'Blues',
direction = 1
)
mpg_aumente %>%
ggplot(aes(x = avg_mpg, y = co2_emission, color = cyl ))+
geom_line()+
labs(
x = "Consommation moyenne de carburant (en mpg)",
y = "Emission de CO2 ",
fill = "Nombre de cylindres",
subtitle = "Distribustion de la consommation de carburant selon la cylindré",
caption = "Source : mpg data - ggplot2_package",
)+
theme_minimal(base_size =10)+
theme(
legend.position = 'top',
legend.title = element_text(face = 'bold'),
panel.grid.minor = element_blank()
) +
scale_fill_distiller(
palette = 'Blues',
direction = 1
)
mpg_aumente %>%
ggplot(aes(x = avg_mpg, y = class))+
geom_line()
mpg_aumente
mpg_aumente %>%
mutate(year = as_factor(year))
mpg_aumente %>%
mutate(year = as_factor(year)) %>%
ggplot(aes(x = avg_mpg, y = manufacturer))+
geom_point(
aes(fill = year),
shape = 21,
size = 5,
color = '#333333'
)
mpg_aumente %>%
mutate(year = as_factor(year)) %>%
ggplot(aes(x = co2_emission, y = manufacturer))+
geom_point(
aes(fill = year),
shape = 21,
size = 5,
color = '#333333'
)
mpg_aumente %>%
mutate(year = as_factor(year)) %>%
ggplot(aes(x = avg_mpg, y = manufacturer))+
geom_point(
aes(fill = year),
shape = 21,
size = 5,
color = '#333333'
)
mpg_aumente %>%
mutate(year = as_factor(year)) %>%
ggplot(aes(x = avg_mpg, y = manufacturer))+
geom_point(
aes(fill = year),
shape = 21,
size = 5,
color = '#333333',
stroke = 1
)
mpg_aumente %>%
mutate(year = as_factor(year)) %>%
ggplot(aes(x = avg_mpg, y = manufacturer))+
geom_point(
color = '#333333',
linewidth = 1
)+
geom_point(
aes(fill = year),
shape = 21,
size = 5,
color = '#333333',
stroke = 1
)
mpg_aumente %>%
mutate(year = as_factor(year)) %>%
ggplot(aes(x = avg_mpg, y = manufacturer))+
geom_line(
color = '#333333',
linewidth = 1
)+
geom_point(
aes(fill = year),
shape = 21,
size = 5,
color = '#333333',
stroke = 1
)
mpg_aumente
